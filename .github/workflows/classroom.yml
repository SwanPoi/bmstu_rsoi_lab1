name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-test:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run unit tests
        run: go test -v -short ./internal/services/...

  build:
    name: Build Binary
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Auth Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: swanpoi/person-service:latest
          context: .
      
  deploy:
    name: Deploy
    needs: [ unit-test, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Update docker-compose
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.REMOTE_IP }}
          port: ${{ secrets.REMOTE_PORT }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          source: docker-compose.yml
          target: /opt/rsoi/
      
      - name: Deploy to host
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_IP }}
          port: ${{ secrets.REMOTE_PORT }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker compose -f /opt/rsoi/docker-compose.yml pull
            docker compose -f /opt/rsoi/docker-compose.yml up -d

      - name: Health check of server
        uses: jtalk/url-health-check-action@v3.2
        with:
          url: http://${{ secrets.REMOTE_IP }}:3000/api/v1/persons
          max-attempts: 30
          retry-delay: 5s


  # build:
  #   name: Autograding
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     # TODO build, test and deploy project

  #     - name: Run API Tests
  #       uses: matt-ball/newman-action@master
  #       with:
  #         collection: postman/[inst] Lab1.postman_collection.json
  #         environment: postman/[inst][heroku] Lab1.postman_environment.json
  #         delayRequest: 100
  #         reporters: '[ "cli" ]'

  #     - name: Autograding
  #       uses: education/autograding@v1
  #       continue-on-error: true

  #     - name: Github auto grader mark
  #       uses: Romanow/google-sheet-autograder-marker@v1.0
  #       with:
  #         google_token: ${{secrets.GOOGLE_API_KEY}}
  #         sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
  #         homework_number: 1
  #         user_column: 'D'
  #         column_offset: 'F'
  #         mark: "'+"